import math
def initialize_board():
    return [' ' for _ in range(9)]
def print_board(board):
    for row in [board[i*3:(i+1)*3] for i in range(3)]:
        print('| ' + ' | '.join(row) + ' |')
    print()
def available_moves(board):
    return [i for i, spot in enumerate(board) if spot == ' ']
def winner(board, player):
    win_conditions = [(0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6), (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6)]
    for condition in win_conditions:
        if board[condition[0]] == board[condition[1]] == board[condition[2]] == player:
            return True
    return False
def is_draw(board):
    return ' ' not in board
def minimax(board, depth, is_maximizing, alpha, beta):
    if winner(board, 'O'):
        return 1
    if winner(board, 'X'):
        return -1
    if is_draw(board):
        return 0

    if is_maximizing:
        max_eval = -math.inf
        for move in available_moves(board):
            board[move] = 'O'
            eval = minimax(board, depth + 1, False, alpha, beta)
            board[move] = ' '
            max_eval = max(max_eval, eval)
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        return max_eval
    else:
        min_eval = math.inf
        for move in available_moves(board):
            board[move] = 'X'
            eval = minimax(board, depth + 1, True, alpha, beta)
            board[move] = ' '
            min_eval = min(min_eval, eval)
            beta = min(beta, eval)
            if beta <= alpha:
                break
        return min_eval
def best_move(board):
    best_val = -math.inf
    move = None
    for m in available_moves(board):
        board[m] = 'O'
        move_val = minimax(board, 0, False, -math.inf, math.inf)
        board[m] = ' '
        if move_val > best_val:
            best_val = move_val
            move = m
    return move
def play_game():
    while True:
        board = initialize_board()
        print("New Game! You are 'X' and the AI is 'O'.")
        print_board(board)

        while True:

            human_move = int(input("Enter your move (1-9): ")) - 1
            if board[human_move] != ' ':
                print("Invalid move. Try again.")
                continue
            board[human_move] = 'X'
            print_board(board)

            if winner(board, 'X'):
                print("Congratulations! You win!")
                break
            if is_draw(board):
                print("It's a draw! Starting a new round...")
                break


            print("AI is making a move...")
            ai_move = best_move(board)
            board[ai_move] = 'O'
            print_board(board)

            if winner(board, 'O'):
                print("AI wins! Better luck next time.")
                break
            if is_draw(board):
                print("It's a draw! Starting a new round...")
                break

if __name__ == "__main__":
    play_game()


New Game! You are 'X' and the AI is 'O'.
|   |   |   |
|   |   |   |
|   |   |   |
